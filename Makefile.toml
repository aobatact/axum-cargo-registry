env_files = [
    "crate-test/test.env"
]

[tasks.local-run]
command = "cargo"
args = ["run", "--bin", "local-axum-cargo-registry", "--features" ,"api" ]
workspace = false

[tasks.local-run-watch]
command = "cargo"
args = ["watch", "-x", "run --bin local-axum-cargo-registry --features api"]
workspace = false

[tasks.download-test-crate]
workspace = false
script = '''
index_target="crate-test/local-storage/index/tr/y-"
mkdir -p $index_target
curl https://index.crates.io/tr/y-/try-partialord > $index_target/try-partialord
crate_target="crate-test/local-storage/crates/try-partialord"
curl https://crates.io/api/v1/crates/try-partialord/0.1.3/download > $crate_target/0.1.3.crate
'''

[tasks.import-check]
workspace = false
script = '''
cd crate-test/import-test-crate
cargo check
cargo build
rm Cargo.lock
'''

[tasks.minio-init]
workspace = false
script = '''
docker compose -f crate-test/dockercompose.yaml up
'''

[tasks.local-run-s3]
dependencies = [ "local-run-s3-prepare-sync" ]
command = "cargo"
args = ["run", "--bin", "axum-cargo-registry-s3", ]
workspace = false

[tasks.local-run-s3-prepare-bucket]
condition = { files_not_exist = ["crate-test/S3_BUCKET_INIT"] }
workspace = false
script = '''
aws s3api create-bucket --bucket index
aws s3api create-bucket --bucket crates
echo "INIT" > crate-test/S3_BUCKET_INIT
'''

[tasks.local-run-s3-prepare-sync]
dependencies = [ "local-run-s3-prepare-bucket" ]
workspace = false
script = '''
aws s3 sync crate-test/local-storage/index s3://index
aws s3 sync crate-test/local-storage/crates s3://crates
'''

[tasks.local-publish-test]
workspace = false
script = '''
cd crate-test/local-storage
rm -rf index/ex/po
rm -rf crates/export-test-lib
cd ../export-test-lib
cargo publish --allow-dirty
'''